{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAnimation } from 'framer-motion';\nimport ChatBubble from '../ChatBubble';\nimport ChatButton from '../ChatButton';\nconst Container = styled.div.withConfig({\n  displayName: \"ChatSection__Container\",\n  componentId: \"sc-1bvz6s6-0\"\n})([\"display:block;height:20rem;flex-grow:1;padding:1.5rem;overflow-y:auto;\"]);\nconst Placeholder = styled(ChatBubble).withConfig({\n  displayName: \"ChatSection__Placeholder\",\n  componentId: \"sc-1bvz6s6-1\"\n})([\"p{background-color:transparent}\"]);\n\nconst ChatSection = ({\n  closeChat,\n  savedMessages,\n  newMessages\n}) => {\n  const controls = useAnimation();\n  useEffect(() => {\n    controls.start(i => ({\n      opacity: 0,\n      x: 100,\n      transition: {\n        delay: i * 0.3\n      }\n    })); // scroll after mount in case there are saved messages\n\n    const el = document.getElementById('messages-container');\n    if (el) el.scrollBy(1000, 1000);\n  });\n  return /*#__PURE__*/_jsxs(Container, {\n    id: \"messages-container\",\n    children: [savedMessages.map((m, index) => {\n      const {\n        message,\n        initial,\n        type,\n        action,\n        isSender\n      } = m;\n\n      if (type === 'button') {\n        return /*#__PURE__*/_jsx(ChatButton, {\n          delay: index,\n          initial: initial,\n          justify: isSender ? 'flex-end' : 'flex-start',\n          onClick: action === 'close' ? closeChat : () => {},\n          onAnimationComplete: () => {\n            const el = document.getElementById('messages-container');\n            el.scrollBy(1000, 1000);\n          },\n          children: message\n        }, `${message}-${index}`);\n      }\n\n      return /*#__PURE__*/_jsx(ChatBubble, {\n        initial: initial,\n        delay: index,\n        justify: isSender ? 'flex-end' : 'flex-start',\n        onAnimationComplete: () => {\n          const el = document.getElementById('messages-container');\n          el.scrollBy(1000, 1000);\n        },\n        children: message\n      }, index);\n    }), newMessages.map((m, index) => {\n      const {\n        message,\n        initial,\n        isSender\n      } = m;\n      return /*#__PURE__*/_jsx(ChatBubble, {\n        initial: initial,\n        justify: isSender ? 'flex-end' : 'flex-start',\n        delay: 0,\n        onAnimationStart: () => {\n          const el = document.getElementById('messages-container');\n          el.scrollBy(1000, 1000);\n        },\n        children: message\n      }, index);\n    }), /*#__PURE__*/_jsx(Placeholder, {\n      delay: 0,\n      children: \" \"\n    })]\n  });\n};\n\nexport default ChatSection;","map":null,"metadata":{},"sourceType":"module"}