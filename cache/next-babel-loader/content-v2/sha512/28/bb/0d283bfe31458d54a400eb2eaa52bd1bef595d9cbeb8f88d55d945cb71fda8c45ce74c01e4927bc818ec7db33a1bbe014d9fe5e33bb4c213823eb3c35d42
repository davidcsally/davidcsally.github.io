{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { flex } from 'styles/mixins';\nconst Column = styled.div.withConfig({\n  displayName: \"CookieBar__Column\",\n  componentId: \"trfyzy-0\"\n})([\"\", \"\"], flex({\n  direction: 'column'\n}));\nconst Row = styled.div.withConfig({\n  displayName: \"CookieBar__Row\",\n  componentId: \"trfyzy-1\"\n})([\"\", \"\"], flex());\nconst Container = styled(motion.div).withConfig({\n  displayName: \"CookieBar__Container\",\n  componentId: \"trfyzy-2\"\n})([\"\", \" position:fixed;bottom:0;min-height:5rem;background-color:white;color:black;width:100%;border:2px solid black;font-size:1.5rem;padding:1rem;z-index:10;p{margin-right:1.5rem;}\"], flex());\nconst animation = {\n  initial: {\n    opacity: 0,\n    y: 20\n  },\n  animate: {\n    opacity: 1,\n    y: 0\n  },\n  exit: {\n    opacity: 0,\n    y: 10\n  }\n};\nconst TinyText = styled.p.withConfig({\n  displayName: \"CookieBar__TinyText\",\n  componentId: \"trfyzy-3\"\n})([\"font-size:12px;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"CookieBar__Button\",\n  componentId: \"trfyzy-4\"\n})([\"padding:1rem 1rem;border:2px solid black;background-color:black;color:white;border-radius:4px;cursor:pointer;\"]);\nexport const CookieBar = ({\n  isCookieBarOpen,\n  closeCookieBar\n}) => /*#__PURE__*/_jsx(AnimatePresence, {\n  children: isCookieBarOpen ? /*#__PURE__*/_jsx(Container, _objectSpread(_objectSpread({}, animation), {}, {\n    children: /*#__PURE__*/_jsxs(Column, {\n      children: [/*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: \"This site uses cookies. Or does it?\"\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"button\",\n          onClick: () => closeCookieBar(),\n          children: \"Who Cares\"\n        })]\n      }), /*#__PURE__*/_jsx(TinyText, {\n        children: \"(but actually it uses a cookie to remember if you clicked this)\"\n      })]\n    })\n  }), \"cookie-bar\") : null\n});","map":null,"metadata":{},"sourceType":"module"}